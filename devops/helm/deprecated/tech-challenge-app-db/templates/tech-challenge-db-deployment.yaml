apiVersion: apps/v1
kind: Deployment
metadata:
  name: tech-challenge-database
  labels:
    {{- include "tech-challenge-app.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tech-challenge-database
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: tech-challenge-database
    spec:
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            {{- if .Values.database.persistentVolume.enabled }}
            claimName: tech-challenge-database-pvc
            {{ else }}
            claimName: {{ .Values.database.customPersistentVolumeClaim }}
            {{ end }}
      containers:
        - name: tech-challenge-db
          image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.database.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tech-challenge-admin-secret
                  key: DB_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: tech-challenge-admin-secret
                  key: DB_NAME
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: tech-challenge-admin-secret
                  key: DB_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tech-challenge-admin-secret
                  key: DB_PASSWORD
            - name: MYSQL_INITDB_SKIP_TZINFO
              valueFrom:
                configMapKeyRef:
                  name: tech-challenge-configmap
                  key: MYSQL_INITDB_SKIP_TZINFO
          ports:
            - containerPort: {{ .Values.database.service.port }}
              name: db-port
              protocol: TCP
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: var/lib/mysql